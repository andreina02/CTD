use el_descubierto;

-- 1) Listar todos los clientes cuyo nombre comience con la letra "A". Se debe mostrar
-- id como "Número de cliente", apellido y nombre.
SELECT id as "Numero de cliente", apellido, nombre
FROM cliente
WHERE nombre LIKE 'A%';
#devuelve 5 datos

-- 2) Mostrar el número de la sucursal con domicilio "Ramón Freire Serrano 7410".
SELECT numero 
FROM sucursal
WHERE domicilio = "Ramón Freire Serrano 7410";
#devuelve 1 dato

-- 3) Se requiere saber cuál es el mayor importe prestado
SELECT MAX(importe)
FROM prestamo;
#devuelve 1 dato

-- 4) Listar los pagos realizados con números 10, 14, 27, 45.
SELECT * 
FROM pago 
WHERE prestamo_id = 10 OR prestamo_id = 14 OR prestamo_id = 27 OR prestamo_id = 45;
#devuelve 10 datos

-- 5) Calcular el total de los pagos realizados para el préstamo número cuarenta. El
-- reporte debe tener dos columnas denominadas "Número de préstamo" y el "Total pagado".
SELECT prestamo_id as "Número de préstamo", SUM(importe) as "Total pagado"
FROM pago
WHERE prestamo_id = 40;
#devuelve 1 datos

-- 6) Listar los empleados que no pertenezcan a la sucursal dos y que la fecha de alta
-- del contrato sea mayor que 5/09/21 o igual a 25/06/21. Ordenar por alta de contrato.
SELECT *
FROM empleado
WHERE sucursal_numero <> 2 and (alta_contrato_laboral > "2021-09-05" or alta_contrato_laboral = "2021-06-25")
ORDER BY alta_contrato_laboral;
#devuelve 2 datos

-- 7) Listar los pagos realizados con importe entre $1030,25 a $1666,66 (ordenarlos
-- por el importe pagado de mayor a menor)
SELECT *
FROM pago
WHERE importe between 1030.25 and 1666.66
ORDER BY importe desc;
#devuelve 14 datos

-- 8) Mostrar el quinto pago realizado con menor importe.
SELECT *
FROM pago
WHERE importe between 1030.25 and 1666.66
ORDER BY importe
LIMIT 1
OFFSET 4;
#devuelve 1 dato

-- 9) Mostrar el préstamo con mayor importe. Este reporte debe contener el número
-- del préstamo, la fecha de otorgamiento y el importe.
SELECT id, fecha_otorgado, importe
FROM prestamo
ORDER BY importe desc
LIMIT 1;
#devuelve 1 dato

-- 10) Mostrar las diez cuentas bancarias con menor saldo. Este reporte debe contener
-- el número de cuenta, saldo y el código del tipo de cuenta.
SELECT numero, saldo, cuenta_tipo_id
FROM cuenta
ORDER BY saldo
LIMIT 10;
#devuelve 10 datos

-- 11) Listar los préstamos otorgados entre 10/07/21 al 10/08/21 (ordenarlos por fecha
-- de otorgamiento)
SELECT *
FROM prestamo
WHERE fecha_otorgado between "2021-07-10" and "2021-08-10"
ORDER BY fecha_otorgado;
#devuelve 10 datos

-- 12) Listar en forma ordenada las cuentas bancarias que tengan un descubierto
-- otorgado superior o igual a $8999,80.
SELECT *
FROM cuenta
WHERE descubierto_otorgado >=8999.80
ORDER BY descubierto_otorgado;
#devuelve 10 datos

-- 13) Listar todos los empleados cuyo apellido termine con los caracteres "do". Se
-- debe mostrar el legajo, apellido, nombre y email.
SELECT legajo, apellido, nombre, email
FROM empleado
WHERE apellido like "%do";
#devuelve 4 datos

-- 14) Se desea conocer cuál es el promedio de los saldos de las cajas de ahorro
SELECT AVG(saldo) as promedio
FROM cuenta
WHERE cuenta_tipo_id=1;
#devuelve 1 dato

-- 15) Mostrar el tercer préstamo con mayor importe
SELECT *
FROM prestamo
ORDER BY importe desc
LIMIT 1
OFFSET 2;
#devuelve 1 dato

-- 16) Calcular la cantidad de cuentas que tiene la sucursal número cinco. El reporte
-- debe tener dos columnas denominadas "Sucursal" y el "Cantidad de Cuentas".
SELECT sucursal_numero as "Sucursal", COUNT(cuenta_tipo_id) as "Cantidad de Cuentas"
FROM cuenta
WHERE sucursal_numero=5;
#devuelve 1 dato

-- 17) Mostrar todas las ciudades que contengan una palabra de cinco caracteres, pero
-- el tercer carácter debe ser igual a "n".
SELECT nombre 
FROM ciudad 
WHERE nombre LIKE '% __n__ %' ;


-- 18) Modificar el tipo de cuenta bancaria "Cuenta Corriente" a "Cuenta Especial"
UPDATE cuenta_tipo
SET tipo= 'CUENTA ESPECIAL'
WHERE id=2;
#afecta una fila

-- 19) En la fecha de hoy, agregar en la sucursal número nueve al empleado Quinteros
-- Arias Raúl Alejandro con domicilio en Av. 25 de mayo 7410 - Pilar - Buenos Aires,
-- mail: quiteros2021bs@gmail.com, teléfono móvil: '+5491154000745'.
INSERT INTO empleado (legajo, sucursal_numero, apellido, nombre, domicilio, ciudad_id, email, telefono_movil, alta_contrato_laboral)
VALUES (default,9,"Quinteros Arias", "Raúl Alejandro", "Av. 25 de mayo 7410", 14, "quiteros2021bs@gmail.com", "+5491154000745","2023-11-07");
#No devuelve ningún dato, inserta un registro

-- 20) Eliminar el registro del préstamo número cuarenta y cinco.
#Primero se deben eliminar los registros en las tablas donde es clave foranea
delete from pago where prestamo_id = 45;
#No devuelve ningún dato, elimina 2 registros
delete from cliente_x_prestamo where prestamo_id = 45;
#No devuelve ningún dato, elimina 1 registro

#Luego se elimina el registro en la tabla donde es clave primaria
DELETE FROM prestamo
WHERE id= 45;
#No devuelve ningún dato, elimina un registro

-- 21) Mostrar el importe total prestado por el banco a sus clientes.
SELECT SUM(importe)
FROM prestamo;
#Devuelve una fila

-- 22) Mostrar la cantidad total de cuentas activas que están registradas en el banco.
SELECT COUNT(activa)
FROM cuenta
WHERE activa=1;
#devuelve un dato, 58 cuentas

-- 23) Mostrar el apellido y la cantidad de clientes que poseen el mismo apellido.
SELECT apellido, COUNT(apellido) as cantidad
FROM cliente
GROUP BY apellido;

-- 24) Mostrar el id del país y la cantidad de ciudades que posee cada uno de ellos.
SELECT pais_id, COUNT(nombre) as cantidad
FROM ciudad
GROUP BY pais_id;
#devuelve 5 filas

-- 25) Necesitamos saber la cantidad de préstamos por sucursal y día otorgado. ¿Hay
-- sucursales que hayan realizado más de un préstamo el mismo día?
select sucursal_numero as sucursal, fecha_otorgado as fecha, count(*) as "cantidad de prestamos" 
from prestamo 
group by sucursal_numero, fecha_otorgado 
having count(*) > 1;
#no devuelve datos



